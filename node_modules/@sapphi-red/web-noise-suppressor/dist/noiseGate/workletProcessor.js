var d=r=>{let n=0;for(let e of r)n+=e*e;return Math.sqrt(n/r.length)},f=r=>Math.pow(10,r/20);var s={CLOSED:0,OPEN:1,CLOSING:2},y=({openThreshold:r,closeThreshold:n,holdMs:e,bufferMs:p})=>{let a=f(r),c=f(n),O=Math.ceil(e/p),o=s.CLOSED,i=0;return{next:t=>{switch(o){case s.CLOSED:t>a&&(o=s.OPEN);break;case s.OPEN:t<c&&(o=s.CLOSING,i=0);break;case s.CLOSING:t>c?o=s.OPEN:i>O?o=s.CLOSED:i++;break;default:console.error(`Unknown state: ${o}`)}},isOpen:()=>o===s.OPEN||o===s.CLOSING}};var S=({openThreshold:r,closeThreshold:n,holdMs:e,maxChannels:p},a)=>{let c=y({openThreshold:r,closeThreshold:n,holdMs:e,bufferMs:a});return{process:(o,i)=>{let l=Math.min(o.length,p),h=0;for(let t=0;t<l;t++)h+=d(o[t])/l;if(c.next(h),c.isOpen())for(let t=0;t<l;t++)i[t].set(o[t])}}};var P="@sapphi-red/web-noise-suppressor/noise-gate";var b=128,u=class extends AudioWorkletProcessor{constructor(e){super();let p=1e3/sampleRate*b;this.processor=S(e.processorOptions,p)}process(e,p,a){return e.length===0||!e[0]||e[0]?.length===0||this.processor.process(e[0],p[0]),!0}};registerProcessor(P,u);
//# sourceMappingURL=workletProcessor.js.map